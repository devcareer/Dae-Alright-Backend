{
    "openapi": "3.0.0",
    "info": {
        "title": "Dae Alright API",
        "description": "This is a simple API",
        "contact": {
            "email": "sandraifeoma22@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [{
        "url": "http://localhost:3000",
        "description": "Dae-Alright Apis"
    }],
    "tags": [{
        "name": "auth",
        "description": "Operations available for authorization"
    }],
    "paths": {
        "/user/signup": {
            "post": {
                "tags": ["auth"],
                "summary": "User can sign up",
                "description": "By passing the user details a user can sign up",
                "operationId": "userSignUp",
                "parameters": [{
                        "name": "firstname",
                        "in": "formdata",
                        "description": "the user's first name",
                        "required": true,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "number of records to skip for pagination",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "minimum": 0,
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "maximum number of records to return",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "maximum": 50,
                            "minimum": 0,
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "search results matching criteria",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/InventoryItem"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad input parameter"
                    }
                }
            },
            "post": {
                "tags": ["admins"],
                "summary": "adds an inventory item",
                "description": "Adds an item to the system",
                "operationId": "addInventory",
                "requestBody": {
                    "description": "Inventory item to add",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InventoryItem"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "item created"
                    },
                    "400": {
                        "description": "invalid input, object invalid"
                    },
                    "409": {
                        "description": "an existing item already exists"
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "tags": ["users"],
                "summary": "Register a user",
                "description": "Successfully register a user",
                "operationId": "addUser",
                "requestBody": {
                    "description": "User details",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created"
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "409": {
                        "description": "a user already exists"
                    }
                }
            }
        },
        "/auth/google": {
            "get": {
                "tags": ["users"],
                "summary": "sign up/in with google",
                "description": "allows a user sign up or sign in to use the app with google oauth 2.0",
                "operationID": "googleSignIn",
                "responses": {
                    "200": {
                        "description": "user is signed in but already exists in the database",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "description": "the authentication token"
                                        },
                                        "user": {
                                            "type": "object",
                                            "description": "the user object"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "user is signed in and added to the database",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "description": "the authentication token"
                                        },
                                        "user": {
                                            "type": "object",
                                            "description": "the user object",

                                            "schema": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "wrong access token or parameter",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "error message"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "redirects": "/google/redirect"
                }
            }
        },
        "/auth/facebook": {
            "get": {
                "tags": ["users"],
                "summary": "sign up/in with facebook",
                "description": "allows a user sign up or sign in to use the app with facebook oauth",
                "operationID": "facebookSignIn",
                "responses": {
                    "200": {
                        "description": "user is signed in but already exists in the database",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "description": "the authentication token"
                                        },
                                        "user": {
                                            "type": "object",
                                            "description": "the user object"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "user is signed in and added to the database",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "description": "the authentication token"
                                        },
                                        "user": {
                                            "type": "object",
                                            "description": "the user object",

                                            "schema": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "wrong access token or parameter",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "error message"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "redirects": "/facebook/callback"
                }
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "required": ["firstName", "lastName", "email", "password", "phone"],
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string",
                        "example": "sandra"
                    },
                    "lastName": {
                        "type": "string",
                        "example": "okafor"
                    },
                    "email": {
                        "type": "string",
                        "example": "okafor@gmail.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "password",
                        "description": "Must be atleast 8 characters"
                    },
                    "phone": {
                        "type": "string",
                        "example": "09065387654"
                    },
                    "address": {
                        "type": "string",
                        "example": "arab road kubwa"
                    }
                }
            },
            "Product": {
                "required": ["name", "price", "quantity", "description", "createdAt", "imageUrl"],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Pineapple - Golden"
                    },
                    "price": {
                        "type": "Number",
                        "example": 609.17
                    },
                    "quantity": {
                        "type": "string",
                        "example": "2"
                    },
                    "description": {
                        "type": "string",
                        "example": "Integer ac leo."
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-14T09:12:57.001Z"
                    },
                    "imageUrl": {
                        "type": "string",
                        "example": "http://dummyimage.com/173x164.jpg/ff4444/ffffff"
                    }
                }
            },
            "vendor": {
                "required": ["name"],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Pixope"
                    },
                    "email": {
                        "type": "string",
                        "example": "nkassel5@unesco.org"
                    },
                    "location": {
                        "type": "string",
                        "example": "3 Coleman Hill"
                    },
                    "phone": {
                        "type": "string",
                        "example": "977-817-9356"
                    }
                }
            }
        }
    }
}